# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

wrong_ans = "false"
account = {}
#new_account_no = 111   #Number is only 3 digit to make process easier


# def type_amount():
#     correct_amount = "false"
#     while correct_amount:
#         try:
#             amount = int(input("Enter Amount:"))
#         except ValueError:
#             print("!!!  Opps, Invalid inpute amount  !!!\n")
#             print("Please try again")
#             continue
#         if amount > 0:
#             correct_amount = "true"
#             break
#         print("!!!  Opps, Account is not found  !!!\n")
#         print("Please try again")
#     return amount


# def type_account():
#     correct_account = "false"
#     while correct_account:
#         try:
#             acc_no = int(input("Enter Account No:"))
#         except ValueError:
#             print("!!!  Sorry, positive numbers are only allowed  !!!\n")
#             print("Please, Try again\n")
#             continue
#         if acc_no in account:
#             correct_account = "true"
#             break
#         print("!!!  Opps, You selected invalid account  !!!\n")
#         print("Please, choose correct Account \n")        # use when account not find
#     return  acc_no

# def display_balance(temp):
#     print("/*** Your current balance is {} dollars   ***\\".format(balance[temp]))

# def AddMoney(acc_no, amount=0):
#     message_print=0
#     if amount == 0:
#         amount = type_amount()
#         message_print = 1  # account balance Message only print when it deposite
#     temp = account.index(acc_no)
#     balance[temp] += amount
#     if message_print == 1:
#         display_balance(temp)


# def DeductMoney(acc_no, amount=0):
#     if amount == 0:
#         amount = type_amount()
#     temp = account.index(acc_no)
#     if balance[temp] >= amount:
#         balance[temp] = balance[temp] - amount
#         display_balance(temp)
#         return 1
#     else:
#         print("!!!  Opps, You have insufficient money  !!!\n Please, Deposite first")
#         return 0

while wrong_ans:
    options=[1,2,3,4,5,0]
    print("|---  Unique Bank ---|")
    print("1) Create Account \n2) Deposit \n3) Withdraw \n4) Transfer Money \n5) Account Balance \n0) Exit")
    try:
        choise = int(input("PLEASE CHOOSE SERVIECE:"))
        print()
        if choise not in options:
            print("!!! Opps, you select wrong option  !!! ")
            print("Please try again \n")
            continue
        elif choise == 0:
            print()            # in order to exit if loop
        elif choise != 1 and len(account) == 0:
            print("!!!  Opps, You have not open account Yet   !!!")
            print("please, open account first to use our services \n")
            continue

        elif choise == 4 and len(account)<2:
            print("@@@ Sorry, Transaction is not posible  @@@")
            print("you have to create another account First\n")
            continue

    except ValueError:
        print("!!!  Opps, You are not selected Correct number  !!!")
        print("Please, try again @\n")
        continue
    else:
        wrong_ans = "true"

    if choise == 1:
        #account.append(new_account_no)
        try:
            lastkey = list(account)[-1]
        except:
            lastkey = 0000
            
        new_acc = lastkey+1
        account[new_acc]= 0
        print("***  Hurrey, Your Account has been created successfully  ***\n")
        print("Welcome to Unique Bank. \nYour account number is ", new_acc)
        print()


    # if choise == 2:
    #     deposit_acc = type_account()
    #     if deposit_acc in account:
    #         AddMoney(deposit_acc)
    #         print()

    # if choise == 3:
    #     withdraw_acc = type_account()
    #     if withdraw_acc in account:
    #         DeductMoney(withdraw_acc)
    #         print()

    # if choise == 4:
    #     print("Transfer From")
    #     transfer_from = type_account()
    #     if transfer_from in account:
    #         print("Transfer To")
    #         transfer_to = type_account()
    #         if transfer_to in account and transfer_from != transfer_to:
    #             amount = type_amount()
    #             successful_tran = DeductMoney(transfer_from, amount)
    #             if successful_tran == 1:
    #                 AddMoney(transfer_to, amount)
    #             print()
    #         else:
    #             print("Self Transfer is not possible ")


    # if choise == 5:
    #     acc = type_account()
    #     if acc in account:
    #         position = account.index(acc)
    #         display_balance(position)
    #         print()

    if choise == 0:
        print("*****  Thank you to visit Unique Bank  *****")
        print("*****         Have a nice day!         *****")
        break
